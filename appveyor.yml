version: build-{build}
image: Visual Studio 2019

init:
  # Good practice, because Windows line endings are different from Unix/Linux ones
  - git config --global core.autocrlf true

install:
  # Visual Studio 2019 image does not have GitVersion installed
  # Also, it seems version 5.0.0 and newer don't work for some reason
  - choco install gitversion.portable -y --version 4.0.0

before_build:
  # Display versions of used tools
  - git --version
  - dotnet --version
  - gitversion /version

  # Calculate semantic version and set environment variables
  - echo *** Calculating semantic version ***
  - gitversion /verbosity warn /l console /output buildserver /nofetch /b %APPVEYOR_REPO_BRANCH%

  # Needed to report test results from .NET Core projects to AppVeyor.
  - echo *** Installing Appveyor.TestLogger into test projects ***
  - ps: |
      Get-ChildItem .\**\*.csproj -Recurse |
        Where-Object { $_.Name -match ".*Test(s)?.csproj$"} |
        ForEach-Object {
          & dotnet add $_.FullName package --no-restore Appveyor.TestLogger
        }

  # Display minimal restore text
  - echo *** Restoring NuGet packages ***
  - dotnet restore --verbosity m

# Patching .NET Core .csproj files (we don't have AssemblyInfo.cs)
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: $(GitVersion_SemVer)
  package_version: $(GitVersion_SemVer)
  assembly_version: $(GitVersion_AssemblySemVer)
  file_version: $(GitVersion_AssemblySemFileVer)
  informational_version: $(GitVersion_InformationalVersion)

build:
  verbosity: minimal
  project: CameraUtility.sln

test_script:
  - echo *** Executing tests ***
  - ps: |
      dotnet test --verbosity m --no-build --logger:AppVeyor;
      if ($LastExitCode -ne 0) { throw "Failed tests" };

# Custom environment variables used to publish artifacts
environment:
  CameraUtility_ConsoleAppName: CameraUtility
  CameraUtility_PublishDirectory: publish

after_test:
  - echo *** Preparing artifacts ***
  # Output console application binaries to 'publish' folder
  - 'dotnet publish --verbosity m --no-build
    --output %APPVEYOR_BUILD_FOLDER%\%CameraUtility_PublishDirectory% %CameraUtility_ConsoleAppName%'

artifacts:
  # Zip and push console application to Artifacts
  - path: $(CameraUtility_PublishDirectory)
    name: $(CameraUtility_ConsoleAppName)-$(GitVersion_SemVer)
