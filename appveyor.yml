version: '{build}'
image: Ubuntu

init:
  # Good practice, because Windows line endings are different from Unix/Linux ones
  - git config --global core.autocrlf true

install:
  - dotnet tool install --global --version 5.1.3 gitversion.tool

before_build:
  # Display versions of used tools
  - git --version
  - dotnet --version
  - dotnet-gitversion /version

  # Calculate semantic version and set environment variables
  - echo *** Calculating semantic version ***
  - dotnet-gitversion /verbosity warn /l console /output buildserver /nofetch /b $APPVEYOR_REPO_BRANCH

  # Needed to report test results from .NET Core projects to AppVeyor.
  - echo *** Installing Appveyor.TestLogger into test projects ***
  - find -regex '.*\.Tests?\.csproj' -exec dotnet add {} package --no-restore Appveyor.TestLogger \;

# Patching .NET Core .csproj files (we don't have AssemblyInfo.cs)
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: $(GitVersion_SemVer)
  package_version: $(GitVersion_SemVer)
  assembly_version: $(GitVersion_AssemblySemVer)
  file_version: $(GitVersion_AssemblySemFileVer)
  informational_version: $(GitVersion_InformationalVersion)

environment:
  # Create separate build jobs for Linux and Windows artifacts
  matrix:
    - CameraUtility_runtime: linux-x64
    - CameraUtility_runtime: win-x64
  # Custom environment variables used to publish artifacts. Note that this is executed BEFORE GitVersion
  # emits its variables, so it's not possible to use these variables in values here.
  CameraUtility_ConsoleAppProject: CameraUtility
  CameraUtility_ConsoleAppName: camera-utility
  CameraUtility_PublishFolder: publish/$CameraUtility_runtime

# Immediately fail entire build if one of the jobs fails
matrix:
  fast_finish: true

configuration: Release

build_script:
  - dotnet build --verbosity m --configuration $CONFIGURATION --runtime $CameraUtility_runtime

test_script:
  - dotnet test --verbosity m --configuration $CONFIGURATION --no-build
    --runtime $CameraUtility_runtime --logger:AppVeyor;

after_test:
  - dotnet publish --verbosity m --configuration $CONFIGURATION --no-build
    --runtime $CameraUtility_runtime --output $CameraUtility_PublishFolder
    $CameraUtility_ConsoleAppProject
    /p:PublishSingleFile=true /p:PublishTrimmed=true /p:DebugType=None
  - 7z a $CameraUtility_ConsoleAppName-$GitVersion_FullSemVer-$CameraUtility_runtime.zip
    $APPVEYOR_BUILD_FOLDER/$CameraUtility_PublishFolder/* $APPVEYOR_BUILD_FOLDER/LICENSE.txt

artifacts:
  - path: $(CameraUtility_ConsoleAppName)-$(GitVersion_FullSemVer)-$(CameraUtility_runtime).zip

deploy:
  release: $(GitVersion_FullSemVer)
  description: ''
  provider: GitHub
  auth_token:
    secure: /YPgr1Fez43MdWKzvzO10XbOLKPQ6gTeYj0L5QG/ZNb1P7utd529LhWGfTKpQb9p
  draft: true
  prerelease: false
  on:
    APPVEYOR_REPO_TAG: true
